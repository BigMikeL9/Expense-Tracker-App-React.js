{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burni\\\\Desktop\\\\React - Web Dev\\\\01-starting-setup\\\\src\\\\App.js\";\n// **************** What is the \"App.js\" file used for? ****************\n// The \"App.js\" is a SPECIAL kind of component. It is our ROOT component which means \n// its the main component being rendered in our starting file (the \"index.js\" file).\n// All other components that we create will be nested inside this file.\n// **************** Importing other files here ****************\n// We import files at the top.\n// import {name of the function} from {its location in our project}\nimport ExpenseItem from \"./components/ExpenseItem\"; // After importing, now we can use the custom component (\"ExpenseItem\") like a\n// regular HTML element, just like we use any HTML element (ie: <h2></h2>).\n// **************** Difference between HTML built-in Elements, and React custom Elements/Components  ****************\n\n/* VERY IMPORTANT: The key difference between built-in HTML elements and our custom elements/components, is that \nour custom elements MUST start with an UPPERCASE character or else react wouldn't be able \nto detect that it is a custom component */\n\n/* SO THING TO REMEMBER: Is that built-in HTML elements starts with a LOWERCASE.\n                          And our custom components/elements starts with an UPPERCASE. \n                                      inorder for them to be detected by React */\n\n/* Must use the exact name that we used in the import */\n// **************** HOW TO HAVE REUSABLE FUNCTIONS that we can call and change multiple times? ****************\n// *** A concept called \"Props\" (stands for properties) in React, enables us to make the components reusable by using parameters.\n\n/* We make a function (in a component) resuable by adding a paramter to it (\"props\") --> which lets us call the same function, but \n   with different parameter input values and thus the function produces different output values and become reusable. */\n\n/* The paramter values, which will be placed inside the component function to output different results, ARE STORED HERE in \"App.js\" file, \n   ussually as an ARRAY that have multiple javascript OBJECTS to store different values. */\n// Component elements (ie: \"<ExpenseItem>\") can have attributes just like in HTML elements (ie: \"<ExpenseItem title={expenses[0].title}> ). \n// SEE BELOW\n\n/* the attributes in the \"App.js\" file are \"Key-Value\" pairs --> \"key\" is the attribute name and values will be their values that we set\n     (ie: ) */\n\n/* These attributes names can be ANYTHING WE WANT. And the component attributes values come from an ARRAY that contains multiple \n   Javascript OBJECTS that we created here in \"App.js\".*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // An array that takes in multiple javascript objects\n  const expenses = [{\n    id: \"e1\",\n    title: \"Car Insurance\",\n    date: new Date(2021, 12, 28),\n    amount: 300.18\n  }, {\n    id: \"e2\",\n    title: \"Toilet paper\",\n    date: new Date(2021, 11, 20),\n    amount: 265.35\n  }, {\n    id: \"e3\",\n    title: \"toilet paper\",\n    date: new Date(2021, 11, 20),\n    amount: 265.35\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/src/App.js"],"names":["ExpenseItem","App","expenses","id","title","date","Date","amount"],"mappings":";AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA,OAAOA,WAAP,MAAwB,0BAAxB,C,CACA;AACA;AAGA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACE;;AAEA;AACF;;AACE;AACF;;;;AAIA,SAASC,GAAT,GAAe;AACb;AACA,QAAMC,QAAQ,GAAG,CAEf;AACEC,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,eAFT;AAGEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAHR;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAFe,EASf;AACEJ,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,cAFT;AAGEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAHR;AAIEC,IAAAA,MAAM,EAAE;AAJV,GATe,EAgBf;AACEJ,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,cAFT;AAGEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAHR;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAhBe,CAAjB;AA2BA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF,oBAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAtCQN,G;AAwCT,eAAeA,GAAf","sourcesContent":["// **************** What is the \"App.js\" file used for? ****************\n// The \"App.js\" is a SPECIAL kind of component. It is our ROOT component which means \n// its the main component being rendered in our starting file (the \"index.js\" file).\n// All other components that we create will be nested inside this file.\n\n\n// **************** Importing other files here ****************\n// We import files at the top.\n// import {name of the function} from {its location in our project}\nimport ExpenseItem from \"./components/ExpenseItem\";\n// After importing, now we can use the custom component (\"ExpenseItem\") like a\n// regular HTML element, just like we use any HTML element (ie: <h2></h2>).\n\n\n// **************** Difference between HTML built-in Elements, and React custom Elements/Components  ****************\n/* VERY IMPORTANT: The key difference between built-in HTML elements and our custom elements/components, is that \nour custom elements MUST start with an UPPERCASE character or else react wouldn't be able \nto detect that it is a custom component */\n/* SO THING TO REMEMBER: Is that built-in HTML elements starts with a LOWERCASE.\n                          And our custom components/elements starts with an UPPERCASE. \n                                      inorder for them to be detected by React */\n/* Must use the exact name that we used in the import */\n\n\n// **************** HOW TO HAVE REUSABLE FUNCTIONS that we can call and change multiple times? ****************\n// *** A concept called \"Props\" (stands for properties) in React, enables us to make the components reusable by using parameters.\n\n/* We make a function (in a component) resuable by adding a paramter to it (\"props\") --> which lets us call the same function, but \n   with different parameter input values and thus the function produces different output values and become reusable. */\n\n/* The paramter values, which will be placed inside the component function to output different results, ARE STORED HERE in \"App.js\" file, \n   ussually as an ARRAY that have multiple javascript OBJECTS to store different values. */\n   \n// Component elements (ie: \"<ExpenseItem>\") can have attributes just like in HTML elements (ie: \"<ExpenseItem title={expenses[0].title}> ). \n  // SEE BELOW\n  \n  /* the attributes in the \"App.js\" file are \"Key-Value\" pairs --> \"key\" is the attribute name and values will be their values that we set\n       (ie: ) */\n  /* These attributes names can be ANYTHING WE WANT. And the component attributes values come from an ARRAY that contains multiple \n     Javascript OBJECTS that we created here in \"App.js\".*/ \n\n\n\nfunction App() {\n  // An array that takes in multiple javascript objects\n  const expenses = [\n\n    {\n      id: \"e1\",\n      title: \"Car Insurance\",\n      date: new Date(2021, 12, 28),\n      amount: 300.18,\n    },\n\n    {\n      id: \"e2\",\n      title: \"Toilet paper\",\n      date: new Date(2021, 11, 20),\n      amount: 265.35,\n    },\n\n    {\n      id: \"e3\",\n      title: \"toilet paper\",\n      date: new Date(2021, 11, 20),\n      amount: 265.35,\n    }\n\n\n  ];\n\n\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      \n      <ExpenseItem></ExpenseItem> {/* React cutom elements. */}\n      <ExpenseItem></ExpenseItem>\n      <ExpenseItem></ExpenseItem>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}