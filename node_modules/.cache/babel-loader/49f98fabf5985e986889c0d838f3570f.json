{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burni\\\\Desktop\\\\React - Web Dev\\\\01-starting-setup\\\\src\\\\components\\\\ExpenseItem.js\";\nimport \"./ExpenseItem.css\"; // This is how you import the css file here.\n// When naming component files in react, every word in capitalized. Ex: \"ExpenseItem.js\"\n// *** It is considered good practice to create new files for different components, so that we have one file per component.\n// A COMPONENT IN REACT, IS JUST A JAVASCRIPT FUNCTION that returns JSX code.\n// The conventional way of naming a function in a component in react, is to name it the same thing as the file name.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem() {\n  return (\n    /*#__PURE__*/\n    // In React there is an important RULE regarding the JSX code (HTML code in Javascript), that we return inside a component:\n    // *** Which is that it MUST ONLY have ONE ROOT ELEMENT per RETURN STATEMENT (or JSX code snippet).\n    // For example: We can't have two divs next to each other, ie: <div>....</div><div>...</div> [NOT ALLOWED BY REACT]\n    // **** The way around it is to wrap all of the elements inside ONE ROOT/MAIN div -->>\n    // ie:\n    _jsxDEV(\"div\", {\n      className: \"expense-item\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Car Insurance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: \"$300.15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this) // When adding css code --> create a file in the components folder with the same name as the component file\n    // ie: \"ExpenseItem.css\"\n    // Then we need to impost the css file here [AT THE TOP]\n\n  );\n} // to use the component, we need to export it or export the function in this file. (**write the name of the function, WITHOUT BRACES)\n\n\n_c = ExpenseItem;\nexport default ExpenseItem; // after exporting this file, we can then import it in the \"App.js\" file where all the other components will be imported or nested to.\n// Summary: WE ALWAYS DO THESE STEPS WHEN CREATING A NEW COMPONENT IN REACT ==>\n//           1. Create a component file and add a function which return HTML code (just like this one)\n//           2. We then \"export\" it (in the same file)\n//           3. Then \"import\" it in the file that we want to use it in (\"ussually \"App.js\").\n//           4. There we can Use it like an HTML element [but starting with an uppercase character] in the file\n//              it is imported in (ussually the \"App.js\" file).\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/src/components/ExpenseItem.js"],"names":["ExpenseItem"],"mappings":";AAAA,OAAO,mBAAP,C,CAA4B;AAG5B;AACA;AAEA;AACA;;;;AACA,SAASA,WAAT,GAAuB;AACrB;AAAA;AACE;AACA;AACA;AACA;AAEA;AACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CAoBE;AACI;AACJ;;AAtBF;AAwBD,C,CAED;;;KA3BSA,W;AA4BT,eAAeA,WAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./ExpenseItem.css\"; // This is how you import the css file here.\r\n\r\n\r\n// When naming component files in react, every word in capitalized. Ex: \"ExpenseItem.js\"\r\n// *** It is considered good practice to create new files for different components, so that we have one file per component.\r\n\r\n// A COMPONENT IN REACT, IS JUST A JAVASCRIPT FUNCTION that returns JSX code.\r\n// The conventional way of naming a function in a component in react, is to name it the same thing as the file name.\r\nfunction ExpenseItem() {\r\n  return (\r\n    // In React there is an important RULE regarding the JSX code (HTML code in Javascript), that we return inside a component:\r\n    // *** Which is that it MUST ONLY have ONE ROOT ELEMENT per RETURN STATEMENT (or JSX code snippet).\r\n    // For example: We can't have two divs next to each other, ie: <div>....</div><div>...</div> [NOT ALLOWED BY REACT]\r\n    // **** The way around it is to wrap all of the elements inside ONE ROOT/MAIN div -->>\r\n    \r\n    // ie:\r\n    <div className=\"expense-item\">  {/* This is the ROOT/MAIN element which wraps all the JSX code inside */}\r\n      <div>\r\n\r\n      </div>\r\n      \r\n      \r\n      <div className=\"expense-item__description\">\r\n        <h2>Car Insurance</h2>\r\n        <div className=\"expense-item__price\">$300.15</div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    // When adding css code --> create a file in the components folder with the same name as the component file\r\n        // ie: \"ExpenseItem.css\"\r\n    // Then we need to impost the css file here [AT THE TOP]\r\n  );\r\n}\r\n\r\n// to use the component, we need to export it or export the function in this file. (**write the name of the function, WITHOUT BRACES)\r\nexport default ExpenseItem;\r\n\r\n// after exporting this file, we can then import it in the \"App.js\" file where all the other components will be imported or nested to.\r\n\r\n// Summary: WE ALWAYS DO THESE STEPS WHEN CREATING A NEW COMPONENT IN REACT ==>\r\n//           1. Create a component file and add a function which return HTML code (just like this one)\r\n//           2. We then \"export\" it (in the same file)\r\n//           3. Then \"import\" it in the file that we want to use it in (\"ussually \"App.js\").\r\n//           4. There we can Use it like an HTML element [but starting with an uppercase character] in the file\r\n//              it is imported in (ussually the \"App.js\" file).\r\n"]},"metadata":{},"sourceType":"module"}