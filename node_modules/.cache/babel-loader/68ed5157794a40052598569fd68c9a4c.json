{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burni\\\\Desktop\\\\React - Web Dev\\\\01-starting-setup\\\\src\\\\App.js\";\n// The \"App.js\" is a SPECIAL kind of component. It is our ROOT component which means \n// its the main component being rendered in our starting file (the \"index.js\" file).\n// All other components that we create will be nested inside this file.\n// We import files at the top.\n// import {name of the function} from {its location in our project}\nimport ExpenseItem from \"./components/ExpenseItem\"; // After importing, now we can use the custom component (\"ExpenseItem\") like a\n// regular HTML element, just like we use any HTML element (ie: <h2></h2>).\n// ************************ HOW TO HAVE REUSABLE FUNCTIONS that we can call and change multiple times? ************************\n// We make a function in a component resuable by accepting paramters --> which lets us call the same function, but with different parameter input values and \n// thus the function produces different output values and become reusable.\n// *** A concept called \"Props\" (stands for properties) in React, enables us to make the components reusable by using paramters.\n// The paramter values, which will be placed inside the component function to output different results, ARE STORED HERE in \"App.js\" file, ussually as an \n// ARRAY that have multiple javascript OBJECTS to store different values\n// Component elements (ie: \"<ExpenseItem>\") can have attributes just like in HTML elements (ie: \"<ExpenseItem title={expenses[0].title}> ). SEE BELOW\n// These attributes names can be ANYTHING WE WANT. And the component attributes values come from the OBJECT that we created here in \"App.js\".\n// After \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/src/App.js"],"names":["ExpenseItem","App"],"mappings":";AAAA;AACA;AACA;AAGA;AAEA;AACA,OAAOA,WAAP,MAAwB,0BAAxB,C,CACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACI;;;;AAIN,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAdQA,G;AAgBT,eAAeA,GAAf","sourcesContent":["// The \"App.js\" is a SPECIAL kind of component. It is our ROOT component which means \n// its the main component being rendered in our starting file (the \"index.js\" file).\n// All other components that we create will be nested inside this file.\n\n\n// We import files at the top.\n\n// import {name of the function} from {its location in our project}\nimport ExpenseItem from \"./components/ExpenseItem\";\n// After importing, now we can use the custom component (\"ExpenseItem\") like a\n// regular HTML element, just like we use any HTML element (ie: <h2></h2>).\n\n\n\n// ************************ HOW TO HAVE REUSABLE FUNCTIONS that we can call and change multiple times? ************************\n// We make a function in a component resuable by accepting paramters --> which lets us call the same function, but with different parameter input values and \n// thus the function produces different output values and become reusable.\n// *** A concept called \"Props\" (stands for properties) in React, enables us to make the components reusable by using paramters.\n// The paramter values, which will be placed inside the component function to output different results, ARE STORED HERE in \"App.js\" file, ussually as an \n// ARRAY that have multiple javascript OBJECTS to store different values\n  // Component elements (ie: \"<ExpenseItem>\") can have attributes just like in HTML elements (ie: \"<ExpenseItem title={expenses[0].title}> ). SEE BELOW\n  // These attributes names can be ANYTHING WE WANT. And the component attributes values come from the OBJECT that we created here in \"App.js\".\n      // After \n\n\n\nfunction App() {\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      {/* ****VERY IMPORTANT: The key difference between built-in HTML elements and our custom elements/components, is that \n                              our custom elements MUST start with an UPPERCASE character or else react wouldn't be able \n                              to detect that it is a custom component */}\n                              {/* SO THING TO REMEMBER: Is that built-in HTML elements starts with a LOWERCASE.\n                                                        And our custom components/elements starts with an UPPERCASE. \n                                                                    inorder for them to be detected by React*/}\n       {/* Must use the exact name that we used in the import */}\n      <ExpenseItem></ExpenseItem>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}