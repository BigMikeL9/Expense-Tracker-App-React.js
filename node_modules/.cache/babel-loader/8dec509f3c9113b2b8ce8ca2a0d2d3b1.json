{"ast":null,"code":"import _slicedToArray from\"C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from\"react\";// dont need this tho    \nimport ExpenseForm from\"./ExpenseForm\";import\"./NewExpense.css\";// This component will return an HTML form for USER inputs, where they can add their expenses.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewExpense=function NewExpense(props){// \"props\" lets us access attribute values (which have functions), from parent components or other compoenents.\nvar saveExpenseDataHandler=function saveExpenseDataHandler(enteredExpenseData){// We get the expense data properties through this parameter. Check \"ExpenseForm.js\" for explanation.\nvar expenseData=_objectSpread(_objectSpread({},enteredExpenseData),{},{id:Math.random().toString()});props.onAddExpense(expenseData);/* passes \"expenseData\" javascript object properties to the \"onAddExpense()\" function's parameter, \r\n                                            located in this component's parent (\"App.js\"). HAVE TO USE THE NAME (KEY) OF THE ATTRIBUTE IN THE PARENT */setIsEditing(false);};// This opens up the user input form tab, when the add new expense button is clicked.\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isEditing=_useState2[0],setIsEditing=_useState2[1];var isEditingHandler=function isEditingHandler(){setIsEditing(true);};var onCancelHandler=function onCancelHandler(){setIsEditing(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense\",children:[!isEditing&&/*#__PURE__*/_jsx(\"button\",{onClick:isEditingHandler,children:\"Add New Expense\"}),isEditing&&/*#__PURE__*/_jsx(ExpenseForm,{onSaveExpenseData:saveExpenseDataHandler,onCancel:onCancelHandler})]});};export default NewExpense;","map":{"version":3,"sources":["C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","setIsEditing","isEditing","isEditingHandler","onCancelHandler"],"mappings":"6VAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAAyC;AACzC,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAO,kBAAP,CAGA;wFACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAAE;AAC5B,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,kBAAD,CAAwB,CAAE;AACrD,GAAMC,CAAAA,WAAW,gCACVD,kBADU,MAEbE,EAAE,CAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAFS,EAAjB,CAIAP,KAAK,CAACQ,YAAN,CAAmBL,WAAnB,EAAiC;AACzC,uJACQM,YAAY,CAAC,KAAD,CAAZ,CACH,CARD,CAWA;AACA,cAAkCZ,QAAQ,CAAC,KAAD,CAA1C,wCAAOa,SAAP,eAAkBD,YAAlB,eAEA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3BF,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAIA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BH,YAAY,CAAC,KAAD,CAAZ,CACH,CAFD,CAKA,mBACI,aAAK,SAAS,CAAC,aAAf,WACK,CAACC,SAAD,eAAc,eAAQ,OAAO,CAAEC,gBAAjB,6BADnB,CAEKD,SAAS,eAAI,KAAC,WAAD,EAAa,iBAAiB,CAAET,sBAAhC,CAAwD,QAAQ,CAAEW,eAAlE,EAFlB,GADJ,CAMH,CA9BD,CAgCA,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\"; // dont need this tho    \r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\n\r\n// This component will return an HTML form for USER inputs, where they can add their expenses.\r\nconst NewExpense = (props) => { // \"props\" lets us access attribute values (which have functions), from parent components or other compoenents.\r\n    const saveExpenseDataHandler = (enteredExpenseData) => { // We get the expense data properties through this parameter. Check \"ExpenseForm.js\" for explanation.\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString(),\r\n        }\r\n        props.onAddExpense(expenseData); /* passes \"expenseData\" javascript object properties to the \"onAddExpense()\" function's parameter, \r\n                                            located in this component's parent (\"App.js\"). HAVE TO USE THE NAME (KEY) OF THE ATTRIBUTE IN THE PARENT */\r\n        setIsEditing(false);\r\n    };\r\n\r\n\r\n    // This opens up the user input form tab, when the add new expense button is clicked.\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    const isEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const onCancelHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n  \r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing && <button onClick={isEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={onCancelHandler}/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}