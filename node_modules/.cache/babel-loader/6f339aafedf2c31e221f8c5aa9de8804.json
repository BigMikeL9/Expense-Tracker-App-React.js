{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burni\\\\Desktop\\\\React - Web Dev\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css'; // Event listeners (listens to an event) in React:\n// \"onInput\" ---> listens/triggers on every KEYSTROKE, can only be used for \n// \"onChange\" ---> also listens/triggers on every KEYSTROKE, but the advantage of it is that it can be used for every type of input \n//                 (for example: also for drop menus)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const [titleEntered, setTitleEntered] = useState(\"\"); // We use the \"useState\" HOOK \n\n  /* the \"useState\" parameter is an EMPTY STRING, because the initial value of the title input is EMPTY \r\n     (that  we want to store). */\n\n  const titleChangeHandler = event => {\n    // the parameter within the Callback function (event) refers to what triggered the event\n    console.log(event.target.value); // console logs the KEYSTROKE that caused the event\n  }; // After we get that key value of the KEY PRESSED --> we want to store it somewhere inorder to use that value.\n  // Inother words, we want to combine all the values, for ALL the inputs, and then combine them as an object when the form is submitted.\n  // Inorder to store these values, and make sure that it survives if the this component/function is re-executed --> WE USE THE \"useState\" HOOK.\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-form__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-form__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-form__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-form__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"Z1Qtn8tk5CPpCysshe/532Yqx+k=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/burni/Desktop/React - Web Dev/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","titleEntered","setTitleEntered","titleChangeHandler","event","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP,C,CAEA;AACI;AACA;AACA;;;;AAGJ,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD,CAFsB,CAEiC;;AAEvD;AACJ;;AAEI,QAAMI,kBAAkB,GAAIC,KAAD,IAAW;AAAE;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EADkC,CACD;AACpC,GAFD,CAPsB,CAWtB;AACA;AAEA;;;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEL;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,YAAvB;AAAoC,UAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAzCD;;GAAMH,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\n// Event listeners (listens to an event) in React:\r\n    // \"onInput\" ---> listens/triggers on every KEYSTROKE, can only be used for \r\n    // \"onChange\" ---> also listens/triggers on every KEYSTROKE, but the advantage of it is that it can be used for every type of input \r\n    //                 (for example: also for drop menus)\r\n\r\n\r\nconst ExpenseForm = () => {\r\n\r\n    const [titleEntered, setTitleEntered] = useState(\"\");  // We use the \"useState\" HOOK \r\n    \r\n    /* the \"useState\" parameter is an EMPTY STRING, because the initial value of the title input is EMPTY \r\n       (that  we want to store). */\r\n\r\n    const titleChangeHandler = (event) => { // the parameter within the Callback function (event) refers to what triggered the event\r\n        console.log(event.target.value); // console logs the KEYSTROKE that caused the event\r\n    };\r\n\r\n    // After we get that key value of the KEY PRESSED --> we want to store it somewhere inorder to use that value.\r\n    // Inother words, we want to combine all the values, for ALL the inputs, and then combine them as an object when the form is submitted.\r\n\r\n    // Inorder to store these values, and make sure that it survives if the this component/function is re-executed --> WE USE THE \"useState\" HOOK.\r\n\r\n    return (\r\n        <form>\r\n            <div className='expense-form'>\r\n                <div className='expense-form__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' onChange={titleChangeHandler} />\r\n                </div>\r\n\r\n                <div className='expense-form__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' />\r\n                </div>\r\n            \r\n                <div className='expense-form__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31' />\r\n                </div>\r\n            </div>          \r\n\r\n            <div className='expense-form__actions'>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}